@inject IReciepieService ReciepieService
@page "/reciepies"

<h3>Reciepies</h3>

<MudGrid Justify="Justify.Center">
    <MudItem md="12" xl="10">
        <MudTable Items="@ReciepieService.Reciepies" Hover="true" Breakpoint="Breakpoint.Sm" @ref="mudTable" OnRowClick="ShowReciepie"
                  T="Reciepie" Loading="@isTableLoading">
            <HeaderContent>
                <MudTh></MudTh>
                <MudTh>Name</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Picture">Pic placeholder</MudTd>
                <MudTd DataLabel="Name">@context.Name</MudTd>
            </RowTemplate>
        </MudTable>
    </MudItem>
</MudGrid>

@code {
    [CascadingParameter] public IModalService Modal { get; set; }

    private MudTable<Reciepie> mudTable;
    private bool isTableLoading = true;

    protected override async Task OnInitializedAsync()
    {
        isTableLoading = true;
        await ReciepieService.GetReciepies();
        isTableLoading = false;
    }

    private void ShowReciepie(TableRowClickEventArgs<Reciepie> selectedRow)
    {
        var ingredients = selectedRow.Item.Ingredients;
        var reciepieText = selectedRow.Item.ReciepieText;
        var reciepieName = selectedRow.Item.Name;

        var options = new ModalOptions { UseCustomLayout = true, ContentScrollable = true, DisableBackgroundCancel = false, Position = ModalPosition.Center, HideCloseButton = true };
        var parameters = new ModalParameters();
        parameters.Add(nameof(ReciepieModal.Ingredients), ingredients);
        parameters.Add(nameof(ReciepieModal.ReciepieText), reciepieText);
        Modal.Show<ReciepieModal>(reciepieName, parameters, options);

        //Console.WriteLine(String.Join(", ", selectedRow.Item.Ingredients));
    }
}
